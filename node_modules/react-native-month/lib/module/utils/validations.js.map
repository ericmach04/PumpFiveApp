{"version":3,"sources":["validations.ts"],"names":["MAX_DATE","Date","MIN_DATE","isDay","day","Number","isInteger","isMonth","month","isYear","year","getFullYear","leapYear","isLeapYear","sameDate","one","other","getDate","getMonth","changedDate","changeMarkedDays","markedDays","nextMarkedDays","Object","keys","length"],"mappings":"AAEA,MAAMA,QAAQ,GAAG,IAAIC,IAAJ,CAAS,gBAAT,CAAjB;AACA,MAAMC,QAAQ,GAAG,IAAID,IAAJ,CAAS,CAAC,gBAAV,CAAjB;AAEA,OAAO,SAASE,KAAT,CAAeC,GAAf,EAA4B;AACjC,SAAOC,MAAM,CAACC,SAAP,CAAiBF,GAAjB,KAAyBA,GAAG,IAAI,CAAhC,IAAqCA,GAAG,IAAI,EAAnD;AACD;AAED,OAAO,SAASG,OAAT,CAAiBC,KAAjB,EAAgC;AACrC,SAAOH,MAAM,CAACC,SAAP,CAAiBE,KAAjB,KAA2BA,KAAK,IAAI,CAApC,IAAyCA,KAAK,GAAG,EAAxD;AACD;AAED,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAA8B;AACnC,SACEL,MAAM,CAACC,SAAP,CAAiBI,IAAjB,KACAA,IAAI,IAAIR,QAAQ,CAACS,WAAT,EADR,IAEAD,IAAI,IAAIV,QAAQ,CAACW,WAAT,EAHV;AAKD;AAED,OAAO,SAASC,QAAT,CAAkBF,IAAlB,EAAgC;AACrC,SAAQA,IAAI,GAAG,CAAP,KAAa,CAAb,IAAkBA,IAAI,GAAG,GAAP,KAAe,CAAlC,IAAwCA,IAAI,GAAG,GAAP,KAAe,CAA9D;AACD;AAED,OAAO,SAASG,UAAT,CAAoBH,IAApB,EAAkC;AACvC,SAAOD,MAAM,CAACC,IAAD,CAAN,IAAgBE,QAAQ,CAACF,IAAD,CAA/B;AACD;AAED,OAAO,SAASI,QAAT,CAAkBC,GAAlB,EAA6BC,KAA7B,EAA0C;AAC/C,SACED,GAAG,CAACE,OAAJ,OAAkBD,KAAK,CAACC,OAAN,EAAlB,IACAF,GAAG,CAACG,QAAJ,OAAmBF,KAAK,CAACE,QAAN,EADnB,IAEAH,GAAG,CAACJ,WAAJ,OAAsBK,KAAK,CAACL,WAAN,EAHxB;AAKD;AAED,OAAO,SAASQ,WAAT,CAAqBJ,GAArB,EAAiCC,KAAjC,EAA+C;AACpD,SACED,GAAG,YAAYd,IAAf,KAAwBe,KAAK,YAAYf,IAAzC,IACCc,GAAG,YAAYd,IAAf,IAAuBe,KAAK,YAAYf,IAAxC,IAAgD,CAACa,QAAQ,CAACC,GAAD,EAAMC,KAAN,CAF5D;AAID;AAED,OAAO,SAASI,gBAAT,CACLC,UAAsB,GAAG,EADpB,EAELC,cAA0B,GAAG,EAFxB,EAGL;AACA,SAAOC,MAAM,CAACC,IAAP,CAAYH,UAAZ,EAAwBI,MAAxB,KAAmCF,MAAM,CAACC,IAAP,CAAYF,cAAZ,EAA4BG,MAAtE;AACD","sourcesContent":["import { MarkedDays } from '../types';\n\nconst MAX_DATE = new Date(8640000000000000);\nconst MIN_DATE = new Date(-8640000000000000);\n\nexport function isDay(day: number) {\n  return Number.isInteger(day) && day >= 1 && day <= 31;\n}\n\nexport function isMonth(month: number) {\n  return Number.isInteger(month) && month >= 0 && month < 12;\n}\n\nexport function isYear(year: number) {\n  return (\n    Number.isInteger(year) &&\n    year >= MIN_DATE.getFullYear() &&\n    year <= MAX_DATE.getFullYear()\n  );\n}\n\nexport function leapYear(year: number) {\n  return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\nexport function isLeapYear(year: number) {\n  return isYear(year) && leapYear(year);\n}\n\nexport function sameDate(one: Date, other: Date) {\n  return (\n    one.getDate() === other.getDate() &&\n    one.getMonth() === other.getMonth() &&\n    one.getFullYear() === other.getFullYear()\n  );\n}\n\nexport function changedDate(one?: Date, other?: Date) {\n  return (\n    one instanceof Date !== other instanceof Date ||\n    (one instanceof Date && other instanceof Date && !sameDate(one, other))\n  );\n}\n\nexport function changeMarkedDays(\n  markedDays: MarkedDays = {},\n  nextMarkedDays: MarkedDays = {}\n) {\n  return Object.keys(markedDays).length !== Object.keys(nextMarkedDays).length;\n}\n"]}