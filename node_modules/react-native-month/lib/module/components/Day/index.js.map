{"version":3,"sources":["index.tsx"],"names":["React","StyleSheet","TouchableOpacity","View","Text","Dot","styles","create","activeDate","backgroundColor","container","alignItems","flex","marginVertical","paddingVertical","endDate","borderBottomRightRadius","borderTopRightRadius","startDate","borderBottomLeftRadius","borderTopLeftRadius","NonTouchableDay","memo","props","isMonthDate","isActive","isOutOfRange","isStartDate","isEndDate","theme","date","isToday","dayContainerStyle","nonTouchableDayContainerStyle","todayContainerStyle","activeDayContainerStyle","dayOutOfRangeContainerStyle","endDateContainerStyle","startDateContainerStyle","color","nonTouchableDayTextStyle","nonTouchableLastMonthDayTextStyle","todayTextStyle","dayOutOfRangeTextStyle","getDate","prevProps","nextProps","isVisible","Day","item","isHidden","dots","finalDots","slice","onPress","renderDayContent","dayTextStyle","activeDayTextStyle","position","bottom","flexDirection","map","d","i","toString","marginLeft","dotContainerStyle"],"mappings":"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","sourcesContent":["import React, { ComponentType } from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { DayType, ThemeType, DayDot } from '../../types';\nimport Dot from '../Dot';\n\nconst styles = StyleSheet.create({\n  activeDate: {\n    backgroundColor: '#3b5998',\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: 'white',\n    flex: 1,\n    marginVertical: 5,\n    paddingVertical: 10,\n  },\n  endDate: {\n    borderBottomRightRadius: 60,\n    borderTopRightRadius: 60,\n  },\n  startDate: {\n    borderBottomLeftRadius: 60,\n    borderTopLeftRadius: 60,\n  },\n});\n\ninterface NonTouchableDayProps {\n  date: Date;\n  isActive: boolean;\n  isMonthDate: boolean;\n  isOutOfRange: boolean;\n  isStartDate: boolean;\n  isEndDate: boolean;\n  isVisible: boolean;\n  isToday: boolean;\n  theme: ThemeType;\n}\n\nconst NonTouchableDay = React.memo<NonTouchableDayProps>(\n  (props: NonTouchableDayProps) => {\n    const {\n      isMonthDate,\n      isActive,\n      isOutOfRange,\n      isStartDate,\n      isEndDate,\n      theme,\n      date,\n      isToday,\n    } = props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          theme.nonTouchableDayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isOutOfRange ? theme.dayOutOfRangeContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n        ]}\n      >\n        <Text\n          style={[\n            { color: '#d3d3d3' },\n            theme.nonTouchableDayTextStyle,\n            isMonthDate ? theme.nonTouchableLastMonthDayTextStyle : {},\n            isToday ? theme.todayTextStyle : {},\n            isOutOfRange ? theme.dayOutOfRangeTextStyle : {},\n          ]}\n        >\n          {date.getDate()}\n        </Text>\n      </View>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.isActive === nextProps.isActive &&\n      prevProps.isVisible === nextProps.isVisible &&\n      prevProps.isStartDate === nextProps.isStartDate &&\n      prevProps.isEndDate === nextProps.isEndDate\n    );\n  }\n);\n\ninterface Props {\n  onPress: (date: Date) => void;\n  dots?: DayDot[];\n  item: DayType;\n  theme: ThemeType;\n  renderDayContent?: (day: DayType) => ComponentType;\n}\n\nconst Day = React.memo<Props>(\n  (props: Props) => {\n    const {\n      item: {\n        date,\n        isVisible,\n        isActive,\n        isStartDate,\n        isEndDate,\n        isMonthDate,\n        isOutOfRange,\n        isToday,\n        isHidden,\n      },\n      dots = [],\n      theme,\n    } = props;\n\n    if (isHidden) {\n      return <View style={[styles.container]} />;\n    }\n\n    if (!isVisible) {\n      return (\n        <NonTouchableDay\n          isActive={isActive}\n          date={date}\n          theme={theme}\n          isMonthDate={isMonthDate}\n          isOutOfRange={isOutOfRange}\n          isStartDate={isStartDate}\n          isEndDate={isEndDate}\n          isVisible={isVisible}\n          isToday={isToday}\n        />\n      );\n    }\n\n    // Should render a maximum of 3 dots\n    const finalDots = dots.slice(0, 3);\n\n    return (\n      <TouchableOpacity\n        style={[\n          styles.container,\n          theme.dayContainerStyle,\n          isToday && !isActive ? theme.todayContainerStyle : {},\n          isActive ? styles.activeDate : {},\n          isActive ? theme.activeDayContainerStyle : {},\n          isStartDate ? styles.startDate : {},\n          isStartDate ? theme.startDateContainerStyle : {},\n          isEndDate ? styles.endDate : {},\n          isEndDate ? theme.endDateContainerStyle : {},\n        ]}\n        onPress={() => props.onPress(props.item.date)}\n      >\n        {props.renderDayContent ? (\n          props.renderDayContent(props.item)\n        ) : (\n          <>\n            <Text\n              style={[\n                { color: isActive ? 'white' : 'black' },\n                theme.dayTextStyle,\n                isToday ? theme.todayTextStyle : {},\n                isActive ? theme.activeDayTextStyle : {},\n              ]}\n            >\n              {date.getDate()}\n            </Text>\n            <View\n              style={{ position: 'absolute', bottom: 3, flexDirection: 'row' }}\n            >\n              {finalDots.map((d, i) => (\n                <Dot\n                  key={i.toString()}\n                  active={isActive}\n                  {...d}\n                  style={{ marginLeft: i === 0 ? 0 : 2 }}\n                  dotContainerStyle={theme.dotContainerStyle}\n                />\n              ))}\n            </View>\n          </>\n        )}\n      </TouchableOpacity>\n    );\n  },\n  (prevProps, nextProps) => {\n    return (\n      prevProps.item.isActive === nextProps.item.isActive &&\n      prevProps.item.isVisible === nextProps.item.isVisible &&\n      prevProps.item.isStartDate === nextProps.item.isStartDate &&\n      prevProps.item.isEndDate === nextProps.item.isEndDate &&\n      prevProps.renderDayContent === nextProps.renderDayContent\n    );\n  }\n);\n\nexport default Day;\n"]}