{"version":3,"sources":["utils.tsx"],"names":["MONDAY_FIRST","dayShouldBeActive","date","startDate","endDate","firstDayOfMonth","lastDayOfMonth","getMonthDays","month","year","firstDayMonday","disableRange","disabledDays","disableOffsetDays","minDate","maxDate","Date","setHours","firstMonthDay","lastMonthDay","daysToAdd","days","startWeekOffset","getDay","daysToCompleteRows","lastRowNextMonthDays","i","day","getDate","getMonth","fullDay","toString","fullMonth","id","getFullYear","isOnSelectableRange","isOutOfRange","isMonthDate","isStartDate","isEndDate","isActive","today","isToday","push","key","isVisible","isHidden","areEqual","prevProps","nextProps","locale","Array","isArray","dayNames","showWeekdays","markedDays"],"mappings":"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","sourcesContent":["import { addDays, getNumberOfDaysInMonth } from '../utils/date';\nimport { changedDate, changeMarkedDays, sameDate } from '../utils/validations';\nimport { MonthProps, DayType } from '../types';\n\nconst MONDAY_FIRST = [6, 0, 1, 2, 3, 4, 5];\n\nfunction dayShouldBeActive(\n  date: Date,\n  startDate: Date,\n  endDate: Date,\n  firstDayOfMonth: Date,\n  lastDayOfMonth: Date\n) {\n  if (date > lastDayOfMonth) {\n    return endDate > lastDayOfMonth && startDate <= lastDayOfMonth;\n  }\n\n  return startDate < firstDayOfMonth && endDate >= firstDayOfMonth;\n}\n\nexport function getMonthDays(\n  month: number,\n  year: number,\n  firstDayMonday: boolean,\n  disableRange: boolean,\n  disabledDays: { [key: string]: any },\n  disableOffsetDays: boolean,\n  startDate?: Date,\n  endDate?: Date,\n  minDate?: Date,\n  maxDate?: Date\n): DayType[] {\n  if (minDate instanceof Date) minDate.setHours(0, 0, 0, 0);\n  if (maxDate instanceof Date) maxDate.setHours(0, 0, 0, 0);\n  if (startDate instanceof Date) startDate.setHours(0, 0, 0, 0);\n  if (endDate instanceof Date) endDate.setHours(0, 0, 0, 0);\n\n  const firstMonthDay = new Date(year, month, 1);\n  const lastMonthDay = new Date(year, month + 1, 0);\n\n  const daysToAdd = getNumberOfDaysInMonth(month, year);\n  const days: DayType[] = [];\n\n  const startWeekOffset = firstDayMonday\n    ? MONDAY_FIRST[firstMonthDay.getDay()]\n    : firstMonthDay.getDay();\n  const daysToCompleteRows = (startWeekOffset + daysToAdd) % 7;\n  const lastRowNextMonthDays = daysToCompleteRows ? 7 - daysToCompleteRows : 0;\n\n  for (let i = -startWeekOffset; i < daysToAdd + lastRowNextMonthDays; i++) {\n    const date: Date = addDays(firstMonthDay, i);\n    const day = date.getDate();\n    const month = date.getMonth();\n    const fullDay = day < 10 ? `0${day}` : day.toString();\n    const fullMonth = month < 10 ? `0${month + 1}` : (month + 1).toString();\n    const id = `${date.getFullYear()}-${fullMonth}-${fullDay}`;\n\n    let isOnSelectableRange = !minDate && !maxDate;\n\n    isOnSelectableRange =\n      (!minDate || (minDate && date >= minDate)) &&\n      (!maxDate || (maxDate && date <= maxDate));\n\n    const isOutOfRange = !!(\n      (minDate && date < minDate) ||\n      (maxDate && date > maxDate)\n    );\n    const isMonthDate = i >= 0 && i < daysToAdd;\n    let isStartDate = false;\n    let isEndDate = false;\n    let isActive = false;\n\n    if (endDate && startDate && !disableRange) {\n      isStartDate = isMonthDate && sameDate(date, startDate);\n      isEndDate = isMonthDate && sameDate(date, endDate);\n\n      if (!isMonthDate) {\n        isActive = dayShouldBeActive(\n          date,\n          startDate,\n          endDate,\n          firstMonthDay,\n          lastMonthDay\n        );\n      } else {\n        isActive = date >= startDate && date <= endDate;\n      }\n    } else if (isMonthDate && startDate && sameDate(date, startDate)) {\n      isStartDate = true;\n      isEndDate = true;\n      isActive = true;\n    }\n\n    const today = new Date();\n    const isToday =\n      day === today.getDate() &&\n      month === today.getMonth() &&\n      year === today.getFullYear();\n\n    days.push({\n      key: `${month}-${id}`,\n      id: id,\n      date,\n      isToday,\n      isMonthDate,\n      isActive,\n      isStartDate,\n      isEndDate,\n      isOutOfRange,\n      isVisible: isOnSelectableRange && isMonthDate && !disabledDays[id],\n      isHidden: disableOffsetDays && !isMonthDate,\n    });\n  }\n\n  return days;\n}\n\nexport function areEqual(prevProps: MonthProps, nextProps: MonthProps) {\n  return (\n    prevProps.month === nextProps.month &&\n    prevProps.year === nextProps.year &&\n    prevProps.locale === nextProps.locale &&\n    Array.isArray(prevProps.dayNames) === Array.isArray(nextProps.dayNames) &&\n    prevProps.showWeekdays === nextProps.showWeekdays &&\n    prevProps.disableRange === nextProps.disableRange &&\n    prevProps.disableOffsetDays === nextProps.disableOffsetDays &&\n    prevProps.firstDayMonday === nextProps.firstDayMonday &&\n    !changeMarkedDays(prevProps.markedDays, nextProps.markedDays) &&\n    !changedDate(prevProps.startDate, nextProps.startDate) &&\n    !changedDate(prevProps.endDate, nextProps.endDate) &&\n    !changedDate(prevProps.minDate, nextProps.minDate) &&\n    !changedDate(prevProps.maxDate, nextProps.maxDate)\n  );\n}\n"]}