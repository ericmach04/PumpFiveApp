{"version":3,"sources":["Calendar.tsx"],"names":["React","useCallback","useRef","useState","useMemo","forwardRef","FlatList","Platform","moment","Month","useMonths","useRange","getMonthIndex","NUMBER_OF_MONTHS","MONTH_HEIGHT","INITIAL_LIST_SIZE","VIEWABLE_RANGE_OFFSET","VIEWABILITY_CONFIG","waitForInteraction","itemVisiblePercentThreshold","minimumViewTime","Calendar","props","ref","numberOfMonths","startingMonth","format","initialListSize","showWeekdays","showMonthTitle","theme","locale","disableRange","firstDayMonday","monthHeight","disableOffsetDays","viewableRangeOffset","monthNames","onPress","dayNames","startDate","endDate","firstViewableIndex","setFirstViewableIndex","lastViewableIndex","setLastViewableIndex","months","firstMonth","firstMonthToRender","start","localStartDate","end","localEndDate","firstMonthIndex","monthIndex","getItemLayout","_data","index","length","offset","keyExtractor","_item","String","onViewableItemsChanged","info","viewableItemsChanged","renderAllMonths","viewableItems","firstViewableItem","l","lastViewableItem","viewabilityConfigCallbackPairs","viewabilityConfig","handlePress","date","renderMonth","month","add","year","renderDayContent","markedDays","minDate","maxDate","disabledDays","isWeb","OS","initialNumToRender","undefined","current","displayName"],"mappings":"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","sourcesContent":["import React, {\n  useCallback,\n  useRef,\n  useState,\n  useMemo,\n  forwardRef,\n  Ref,\n} from 'react';\nimport { FlatList, Platform } from 'react-native';\nimport moment from 'moment';\n\nimport Month from './Month';\nimport useMonths from '../hooks/use-months';\nimport useRange from '../hooks/use-range';\nimport { getMonthIndex } from '../utils/date';\nimport { CalendarProps, ViewableItemsType } from '../types';\n\nconst NUMBER_OF_MONTHS = 12;\nconst MONTH_HEIGHT = 370;\nconst INITIAL_LIST_SIZE = 2;\nconst VIEWABLE_RANGE_OFFSET = 5;\n\nconst VIEWABILITY_CONFIG = {\n  waitForInteraction: true,\n  itemVisiblePercentThreshold: 10,\n  minimumViewTime: 32,\n};\n\nconst Calendar = forwardRef((props: CalendarProps, ref: Ref<FlatList>) => {\n  const {\n    numberOfMonths = NUMBER_OF_MONTHS,\n    startingMonth = moment().format('YYYY-MM-DD'),\n    initialListSize = INITIAL_LIST_SIZE,\n    showWeekdays = true,\n    showMonthTitle = true,\n    theme = {},\n    locale = 'en',\n    disableRange = false,\n    firstDayMonday = false,\n    monthHeight = MONTH_HEIGHT,\n    disableOffsetDays = false,\n    viewableRangeOffset = VIEWABLE_RANGE_OFFSET,\n    monthNames,\n    onPress,\n    dayNames,\n    startDate,\n    endDate,\n  } = props;\n\n  const [firstViewableIndex, setFirstViewableIndex] = useState(0);\n  const [lastViewableIndex, setLastViewableIndex] = useState(\n    INITIAL_LIST_SIZE + viewableRangeOffset!\n  );\n\n  const { months, firstMonth: firstMonthToRender } = useMonths({\n    numberOfMonths,\n    startingMonth,\n  });\n\n  const { start: localStartDate, end: localEndDate } = useRange({\n    startDate,\n    endDate,\n    firstMonthToRender,\n    numberOfMonths,\n  });\n\n  const firstMonthIndex = useMemo(() => {\n    if (localStartDate) {\n      const monthIndex = getMonthIndex(\n        firstMonthToRender,\n        localStartDate,\n        months,\n        numberOfMonths\n      );\n\n      if (monthIndex !== null) {\n        return monthIndex;\n      }\n    }\n\n    return 0;\n  }, [firstMonthToRender, localStartDate, months, numberOfMonths]);\n\n  const getItemLayout = useCallback(\n    (\n      _data: any,\n      index: number\n    ): { length: number; offset: number; index: number } => ({\n      length: monthHeight,\n      offset: monthHeight * index,\n      index,\n    }),\n    [monthHeight]\n  );\n\n  const keyExtractor = useCallback(\n    (_item: any, index: number): string => String(index),\n    []\n  );\n\n  const onViewableItemsChanged = useCallback(\n    (info: ViewableItemsType) => {\n      if (props.viewableItemsChanged) {\n        props.viewableItemsChanged(info);\n      }\n\n      if (props.renderAllMonths) {\n        return;\n      }\n\n      const { viewableItems } = info;\n\n      if (viewableItems.length > 0) {\n        const {\n          0: firstViewableItem,\n          length: l,\n          [l - 1]: lastViewableItem,\n        } = viewableItems;\n\n        if (\n          firstViewableIndex !== firstViewableItem.index ||\n          lastViewableIndex !== lastViewableItem.index\n        ) {\n          setFirstViewableIndex(firstViewableItem.index!);\n          setLastViewableIndex(lastViewableItem.index! + VIEWABLE_RANGE_OFFSET);\n        }\n      }\n    },\n    [firstViewableIndex, lastViewableIndex, props]\n  );\n\n  const viewabilityConfigCallbackPairs = useRef([\n    {\n      viewabilityConfig: VIEWABILITY_CONFIG,\n      onViewableItemsChanged,\n    },\n  ]);\n\n  const handlePress = useCallback(\n    (date: Date) => {\n      if (onPress) {\n        onPress(date);\n      }\n    },\n    [onPress]\n  );\n\n  const renderMonth = useCallback(\n    ({ index }: { index: number }) => {\n      const month = moment(firstMonthToRender).add(index, 'months');\n\n      return (\n        <Month\n          month={month.month()}\n          year={month.year()}\n          index={index}\n          firstMonthToRender={firstMonthToRender}\n          monthNames={monthNames}\n          onPress={handlePress}\n          theme={theme}\n          renderAllMonths={props.renderAllMonths}\n          showWeekdays={showWeekdays}\n          showMonthTitle={showMonthTitle}\n          locale={locale}\n          dayNames={dayNames}\n          height={monthHeight}\n          firstDayMonday={firstDayMonday}\n          renderDayContent={props.renderDayContent}\n          markedDays={props.markedDays}\n          minDate={props.minDate}\n          maxDate={props.maxDate}\n          startDate={localStartDate}\n          endDate={localEndDate}\n          disableRange={disableRange}\n          disabledDays={props.disabledDays}\n          disableOffsetDays={disableOffsetDays}\n          firstViewableIndex={firstViewableIndex}\n          lastViewableIndex={lastViewableIndex}\n          viewableRangeOffset={viewableRangeOffset!}\n        />\n      );\n    },\n    [\n      dayNames,\n      disableOffsetDays,\n      disableRange,\n      firstDayMonday,\n      firstMonthToRender,\n      firstViewableIndex,\n      handlePress,\n      lastViewableIndex,\n      localEndDate,\n      localStartDate,\n      locale,\n      monthHeight,\n      monthNames,\n      props.disabledDays,\n      props.markedDays,\n      props.maxDate,\n      props.minDate,\n      props.renderAllMonths,\n      props.renderDayContent,\n      showMonthTitle,\n      showWeekdays,\n      theme,\n      viewableRangeOffset,\n    ]\n  );\n\n  const isWeb = Platform.OS === 'web';\n  const initialNumToRender = isWeb ? numberOfMonths : initialListSize;\n\n  return (\n    <FlatList\n      getItemLayout={!isWeb ? getItemLayout : undefined}\n      initialScrollIndex={!isWeb ? firstMonthIndex : 0}\n      removeClippedSubviews\n      initialNumToRender={initialNumToRender}\n      keyExtractor={keyExtractor}\n      viewabilityConfigCallbackPairs={viewabilityConfigCallbackPairs.current}\n      renderItem={renderMonth}\n      data={months}\n      ref={ref}\n    />\n  );\n});\n\nCalendar.displayName = 'Calendar';\n\nexport default Calendar;\n"]}