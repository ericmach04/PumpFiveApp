{"version":3,"sources":["use-range.ts"],"names":["useMemo","moment","isValidDate","useRange","startDate","endDate","numberOfMonths","firstMonthToRender","start","lastMonth","add","toDate","Date","undefined","end"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,WAAT,QAA4B,eAA5B;AAaA,eAAe,SAASC,QAAT,CAAkB;AAC/BC,EAAAA,SAD+B;AAE/BC,EAAAA,OAF+B;AAG/BC,EAAAA,cAH+B;AAI/BC,EAAAA;AAJ+B,CAAlB,EAKG;AAChB,SAAOP,OAAO,CAAC,MAAM;AACnB,QAAIQ,KAAJ;AACA,UAAMC,SAAS,GAAGR,MAAM,CAACM,kBAAD,CAAN,CACfG,GADe,CACXJ,cADW,EACK,QADL,EAEfK,MAFe,EAAlB;;AAIA,QAAIP,SAAS,IAAIF,WAAW,CAAC,IAAIU,IAAJ,CAASR,SAAT,CAAD,CAA5B,EAAmD;AACjDI,MAAAA,KAAK,GAAGP,MAAM,CAACG,SAAD,EAAY,YAAZ,CAAN,CAAgCO,MAAhC,EAAR;;AAEA,UAAIH,KAAK,GAAGC,SAAZ,EAAuB;AACrBD,QAAAA,KAAK,GAAGK,SAAR;AACD;AACF;;AAED,QAAIC,GAAG,GACLT,OAAO,IAAIH,WAAW,CAAC,IAAIU,IAAJ,CAASP,OAAT,CAAD,CAAtB,IAA6CA,OAAO,IAAII,SAAxD,GACIR,MAAM,CAACI,OAAD,EAAU,YAAV,CAAN,CAA8BM,MAA9B,EADJ,GAEIE,SAHN;AAKA,WAAO;AACLL,MAAAA,KADK;AAELM,MAAAA;AAFK,KAAP;AAID,GAvBa,EAuBX,CAACT,OAAD,EAAUE,kBAAV,EAA8BD,cAA9B,EAA8CF,SAA9C,CAvBW,CAAd;AAwBD","sourcesContent":["import { useMemo } from 'react';\nimport moment from 'moment';\n\nimport { isValidDate } from '../utils/date';\nimport { CalendarProps } from '../types';\n\ninterface Input\n  extends Pick<CalendarProps, 'startDate' | 'endDate' | 'numberOfMonths'> {\n  firstMonthToRender: Date;\n}\n\ninterface Result {\n  start?: Date;\n  end?: Date;\n}\n\nexport default function useRange({\n  startDate,\n  endDate,\n  numberOfMonths,\n  firstMonthToRender,\n}: Input): Result {\n  return useMemo(() => {\n    let start: Date | undefined;\n    const lastMonth = moment(firstMonthToRender)\n      .add(numberOfMonths, 'months')\n      .toDate();\n\n    if (startDate && isValidDate(new Date(startDate))) {\n      start = moment(startDate, 'YYYY-MM-DD').toDate();\n\n      if (start > lastMonth) {\n        start = undefined;\n      }\n    }\n\n    let end =\n      endDate && isValidDate(new Date(endDate)) && endDate <= lastMonth\n        ? moment(endDate, 'YYYY-MM-DD').toDate()\n        : undefined;\n\n    return {\n      start,\n      end,\n    };\n  }, [endDate, firstMonthToRender, numberOfMonths, startDate]);\n}\n"]}